{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/frontend/src/components/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, KmlLayer } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nconst center = {\n  lat: 32,\n  lng: 20\n};\n\n// Specify the URL of the countries KML file\nconst countriesKmlUrl = '/countries.kml';\nfunction MarketWatch() {\n  _s();\n  const [apiKey, setApiKey] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('/api/maps/config').then(response => response.json()).then(data => setApiKey(data.apiKey)).catch(error => {\n      console.error('Error fetching Google Maps API key:', error);\n      setError('Error loading Google Maps!');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : apiKey ? /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: apiKey,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 2,\n        children: /*#__PURE__*/_jsxDEV(KmlLayer, {\n          url: countriesKmlUrl,\n          options: {\n            preserveViewport: true,\n            suppressInfoWindows: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(MarketWatch, \"IySBdZ64bsMKLNxuWDj2b21T8E0=\");\n_c = MarketWatch;\nexport default MarketWatch;\nvar _c;\n$RefreshReg$(_c, \"MarketWatch\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","KmlLayer","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","countriesKmlUrl","MarketWatch","_s","apiKey","setApiKey","error","setError","fetch","then","response","json","data","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapContainerStyle","zoom","url","options","preserveViewport","suppressInfoWindows","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/frontend/src/components/MarketWatch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, KmlLayer } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '800px',\n  height: '400px',\n};\n\nconst center = {\n  lat: 32,\n  lng: 20,\n};\n\n// Specify the URL of the countries KML file\nconst countriesKmlUrl = '/countries.kml';\n\nfunction MarketWatch() {\n  const [apiKey, setApiKey] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch('/api/maps/config')\n      .then(response => response.json())\n      .then(data => setApiKey(data.apiKey))\n      .catch(error => {\n        console.error('Error fetching Google Maps API key:', error);\n        setError('Error loading Google Maps!');\n      });\n  }, []);\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : apiKey ? (\n        <LoadScript googleMapsApiKey={apiKey}>\n          <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={2}>\n            {/* Load the countries KML file */}\n            <KmlLayer\n              url={countriesKmlUrl}\n              options={{ preserveViewport: true, suppressInfoWindows: true }}\n            />\n          </GoogleMap>\n        </LoadScript>\n      ) : (\n        <p>Loading map...</p>\n      )}\n    </>\n  );\n}\n\nexport default MarketWatch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,EAAE;EACPC,GAAG,EAAE;AACP,CAAC;;AAED;AACA,MAAMC,eAAe,GAAG,gBAAgB;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdsB,KAAK,CAAC,kBAAkB,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,SAAS,CAACO,IAAI,CAACR,MAAM,CAAC,CAAC,CACpCS,KAAK,CAACP,KAAK,IAAI;MACdQ,OAAO,CAACR,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3DC,QAAQ,CAAC,4BAA4B,CAAC;IACxC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAAAE,SAAA;IAAAqB,QAAA,EACGT,KAAK,gBACJd,OAAA;MAAAuB,QAAA,EAAIT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GACZf,MAAM,gBACRZ,OAAA,CAACH,UAAU;MAAC+B,gBAAgB,EAAEhB,MAAO;MAAAW,QAAA,eACnCvB,OAAA,CAACJ,SAAS;QAACiC,iBAAiB,EAAE1B,cAAe;QAACG,MAAM,EAAEA,MAAO;QAACwB,IAAI,EAAE,CAAE;QAAAP,QAAA,eAEpEvB,OAAA,CAACF,QAAQ;UACPiC,GAAG,EAAEtB,eAAgB;UACrBuB,OAAO,EAAE;YAAEC,gBAAgB,EAAE,IAAI;YAAEC,mBAAmB,EAAE;UAAK;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAEb3B,OAAA;MAAAuB,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACrB,gBACD,CAAC;AAEP;AAAChB,EAAA,CAjCQD,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAmCpB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}