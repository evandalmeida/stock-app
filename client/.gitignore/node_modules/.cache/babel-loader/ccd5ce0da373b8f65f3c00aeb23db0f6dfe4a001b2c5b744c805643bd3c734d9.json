{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/client/src/components/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nconst center = {\n  lat: 32,\n  lng: 20\n};\nconst locations = [{\n  name: 'United States',\n  lat: 37.0902,\n  lng: -95.7129\n}, {\n  name: 'Europe',\n  lat: 54.5260,\n  lng: 15.2551\n}, {\n  name: 'Asia',\n  lat: 34.0479,\n  lng: 100.6197\n}, {\n  name: 'Australia',\n  lat: -25.2744,\n  lng: 133.7751\n}, {\n  name: 'Canada',\n  lat: 56.1304,\n  lng: -106.3468\n}];\nfunction MarketWatch() {\n  _s();\n  const [apiKey, setApiKey] = useState(\"\");\n  useEffect(() => {\n    fetch('localhost:5555/api/maps/config').then(response => response.json()).then(data => setApiKey(data.apiKey));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: apiKey ? /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: apiKey,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 2,\n        children: locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: location,\n          title: location.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n_s(MarketWatch, \"NxfgCotLcCWwWhDqFLddSEQGeuQ=\");\n_c = MarketWatch;\nexport default MarketWatch;\nvar _c;\n$RefreshReg$(_c, \"MarketWatch\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","locations","name","MarketWatch","_s","apiKey","setApiKey","fetch","then","response","json","data","children","googleMapsApiKey","mapContainerStyle","zoom","map","location","index","position","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/client/src/components/MarketWatch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {width: '800px', height: '400px'};\nconst center = {lat: 32,lng: 20};\nconst locations = [\n  { name: 'United States', lat: 37.0902, lng: -95.7129 },\n  { name: 'Europe', lat: 54.5260, lng: 15.2551 },\n  { name: 'Asia', lat: 34.0479, lng: 100.6197 },\n  { name: 'Australia', lat: -25.2744, lng: 133.7751 },\n  { name: 'Canada', lat: 56.1304, lng: -106.3468 }\n];\n\nfunction MarketWatch() {\n  const [apiKey, setApiKey] = useState(\"\");\n\n  useEffect(() => {\n    fetch('localhost:5555/api/maps/config')\n      .then(response => response.json())\n      .then(data => setApiKey(data.apiKey))\n  }, []);\n\n  return (\n    <>\n      {apiKey ? (\n        <LoadScript googleMapsApiKey={apiKey}>\n          <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={2}>\n            {locations.map((location, index) => (\n              <Marker key={index} position={location} title={location.name} />\n            ))}\n          </GoogleMap>\n        </LoadScript>\n      ) : (<p>Loading map...</p>)}\n    </>\n  );\n}\n\nexport default MarketWatch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvE,MAAMC,cAAc,GAAG;EAACC,KAAK,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAO,CAAC;AACxD,MAAMC,MAAM,GAAG;EAACC,GAAG,EAAE,EAAE;EAACC,GAAG,EAAE;AAAE,CAAC;AAChC,MAAMC,SAAS,GAAG,CAChB;EAAEC,IAAI,EAAE,eAAe;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE,CAAC;AAAQ,CAAC,EACtD;EAAEE,IAAI,EAAE,QAAQ;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC,EAC9C;EAAEE,IAAI,EAAE,MAAM;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAS,CAAC,EAC7C;EAAEE,IAAI,EAAE,WAAW;EAAEH,GAAG,EAAE,CAAC,OAAO;EAAEC,GAAG,EAAE;AAAS,CAAC,EACnD;EAAEE,IAAI,EAAE,QAAQ;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE,CAAC;AAAS,CAAC,CACjD;AAED,SAASG,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdqB,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAACN,MAAM,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA,CAAAE,SAAA;IAAAkB,QAAA,EACGP,MAAM,gBACLb,OAAA,CAACH,UAAU;MAACwB,gBAAgB,EAAER,MAAO;MAAAO,QAAA,eACnCpB,OAAA,CAACJ,SAAS;QAAC0B,iBAAiB,EAAEnB,cAAe;QAACG,MAAM,EAAEA,MAAO;QAACiB,IAAI,EAAE,CAAE;QAAAH,QAAA,EACnEX,SAAS,CAACe,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B1B,OAAA,CAACF,MAAM;UAAa6B,QAAQ,EAAEF,QAAS;UAACG,KAAK,EAAEH,QAAQ,CAACf;QAAK,GAAhDgB,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6C,CAChE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBACVhC,OAAA;MAAAoB,QAAA,EAAG;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAE,gBAC3B,CAAC;AAEP;AAACpB,EAAA,CAtBQD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAwBpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}