{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/frontend/src/components/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, KmlLayer } from '@react-google-maps/api';\nimport countriesKml from './countries.kml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst originalCenter = {\n  lat: 32,\n  lng: 20\n};\nconst containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nfunction Map() {\n  _s();\n  const [apiKey, setApiKey] = useState('');\n  useEffect(() => {\n    fetch('/api/key').then(res => res.text()).then(setApiKey);\n  }, []);\n  const [center, setCenter] = useState(originalCenter);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: apiKey,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      center: center,\n      zoom: 2,\n      mapContainerStyle: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(KmlLayer, {\n        data: countriesKml,\n        options: {\n          preserveViewport: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"A9K0lMH/gnmgJiVldqIiAM7EgC8=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","KmlLayer","countriesKml","jsxDEV","_jsxDEV","originalCenter","lat","lng","containerStyle","width","height","Map","_s","apiKey","setApiKey","fetch","then","res","text","center","setCenter","googleMapsApiKey","children","zoom","mapContainerStyle","data","options","preserveViewport","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/frontend/src/components/MarketWatch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, KmlLayer } from '@react-google-maps/api';\nimport countriesKml from './countries.kml';\n\nconst originalCenter = {\n  lat: 32, \n  lng: 20\n};\n\nconst containerStyle = {\n  width: '800px',\n  height: '400px' \n};\n\nfunction Map() {\n\n  const [apiKey, setApiKey] = useState('');\n\n  useEffect(() => {\n    fetch('/api/key')\n      .then(res => res.text())\n      .then(setApiKey);\n  }, []);\n\n  const [center, setCenter] = useState(originalCenter);\n\n  return (\n    <LoadScript \n      googleMapsApiKey={apiKey}\n    >\n     <GoogleMap\n       center={center}\n       zoom={2}\n       mapContainerStyle={containerStyle}\n     >\n       <KmlLayer\n         data={countriesKml}\n         options={{\n           preserveViewport: true\n         }}\n       />\n     </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default Map;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,wBAAwB;AACxE,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,GAAG;EACrBC,GAAG,EAAE,EAAE;EACPC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdiB,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACF,SAAS,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAACQ,cAAc,CAAC;EAEpD,oBACED,OAAA,CAACJ,UAAU;IACTqB,gBAAgB,EAAER,MAAO;IAAAS,QAAA,eAE1BlB,OAAA,CAACL,SAAS;MACRoB,MAAM,EAAEA,MAAO;MACfI,IAAI,EAAE,CAAE;MACRC,iBAAiB,EAAEhB,cAAe;MAAAc,QAAA,eAElClB,OAAA,CAACH,QAAQ;QACPwB,IAAI,EAAEvB,YAAa;QACnBwB,OAAO,EAAE;UACPC,gBAAgB,EAAE;QACpB;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEjB;AAACnB,EAAA,CA9BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}