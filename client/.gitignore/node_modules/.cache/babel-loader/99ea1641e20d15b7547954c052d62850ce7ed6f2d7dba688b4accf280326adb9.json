{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/frontend/src/components/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  useEffect(() => {\n    initEarth();\n  }, []);\n  const initEarth = () => {\n    let ge;\n    google.earth.createInstance('earth_div', function (instance) {\n      ge = instance;\n      ge.getWindow().setVisibility(true);\n\n      // Enable navigation  \n      ge.getNavigationControl().setVisibility(ge.VISIBILITY_AUTO);\n\n      // Add placemarks\n      addPlacemarks();\n\n      // Spin globe\n      spinGlobe(ge);\n    }, failureCB);\n  };\n  const addPlacemarks = () => {\n    // Create and add placemarks\n  };\n  const spinGlobe = ge => {\n    setInterval(() => {\n      ge.getView().setHeading(ge.getView().getHeading() + 1);\n    }, 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"earth_div\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Map","_s","initEarth","ge","google","earth","createInstance","instance","getWindow","setVisibility","getNavigationControl","VISIBILITY_AUTO","addPlacemarks","spinGlobe","failureCB","setInterval","getView","setHeading","getHeading","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/frontend/src/components/MarketWatch.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nfunction Map() {\n\n  useEffect(() => {\n    initEarth(); \n  }, []);\n\n  const initEarth = () => {\n\n    let ge;\n\n    google.earth.createInstance('earth_div', function(instance) {\n      ge = instance;\n      ge.getWindow().setVisibility(true);\n\n      // Enable navigation  \n      ge.getNavigationControl().setVisibility(ge.VISIBILITY_AUTO);\n\n      // Add placemarks\n      addPlacemarks();\n\n      // Spin globe\n      spinGlobe(ge);\n\n    }, failureCB);\n  }\n\n  const addPlacemarks = () => {\n    // Create and add placemarks\n  }\n\n  const spinGlobe = (ge) => {\n    setInterval(() => {\n      ge.getView().setHeading(ge.getView().getHeading() + 1);\n    }, 100);\n  }\n\n  return (\n    <div id=\"earth_div\"></div>\n  );\n\n}\n\nexport default Map;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEbJ,SAAS,CAAC,MAAM;IACdK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAGA,CAAA,KAAM;IAEtB,IAAIC,EAAE;IAENC,MAAM,CAACC,KAAK,CAACC,cAAc,CAAC,WAAW,EAAE,UAASC,QAAQ,EAAE;MAC1DJ,EAAE,GAAGI,QAAQ;MACbJ,EAAE,CAACK,SAAS,CAAC,CAAC,CAACC,aAAa,CAAC,IAAI,CAAC;;MAElC;MACAN,EAAE,CAACO,oBAAoB,CAAC,CAAC,CAACD,aAAa,CAACN,EAAE,CAACQ,eAAe,CAAC;;MAE3D;MACAC,aAAa,CAAC,CAAC;;MAEf;MACAC,SAAS,CAACV,EAAE,CAAC;IAEf,CAAC,EAAEW,SAAS,CAAC;EACf,CAAC;EAED,MAAMF,aAAa,GAAGA,CAAA,KAAM;IAC1B;EAAA,CACD;EAED,MAAMC,SAAS,GAAIV,EAAE,IAAK;IACxBY,WAAW,CAAC,MAAM;MAChBZ,EAAE,CAACa,OAAO,CAAC,CAAC,CAACC,UAAU,CAACd,EAAE,CAACa,OAAO,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;IACxD,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,oBACEnB,OAAA;IAAKoB,EAAE,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAG9B;AAACtB,EAAA,CAxCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}