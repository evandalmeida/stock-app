{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst indexFunds = {\n  'United States': {\n    name: 'S&P 500',\n    ticker: 'SPY'\n  },\n  'Europe': {\n    name: 'Euro Stoxx 50',\n    ticker: 'STOXX50'\n  },\n  'Asia': {\n    name: 'Nikkei 225',\n    ticker: 'NIKKEI225'\n  },\n  'Australia': {\n    name: 'S&P/ASX 200',\n    ticker: 'ASX200'\n  },\n  'Canada': {\n    name: 'S&P/TSX Composite',\n    ticker: 'TSX'\n  }\n};\nconst locations = [{\n  name: 'United States',\n  lat: 37.0902,\n  lng: -95.7129\n}, {\n  name: 'Europe',\n  lat: 54.5260,\n  lng: 15.2551\n}, {\n  name: 'Asia',\n  lat: 34.0479,\n  lng: 100.6197\n}, {\n  name: 'Australia',\n  lat: -25.2744,\n  lng: 133.7751\n}, {\n  name: 'Canada',\n  lat: 56.1304,\n  lng: -106.3468\n}];\nexport default function MarketWatch() {\n  _s();\n  const [stockPrices, setStockPrices] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPrices = async () => {\n      try {\n        const prices = [];\n        for (let loc of locations) {\n          const fund = indexFunds[loc.name];\n          const res = await fetch(`/api/price?ticker=${fund.ticker}`);\n          console.log(res);\n          const data = await res.json();\n          prices.push({\n            location: loc,\n            fund: fund,\n            price: data.price,\n            change: data.change\n          });\n        }\n        setStockPrices(prices);\n      } catch (err) {\n        setError(err);\n      }\n    };\n    fetchPrices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"YOUR_API_KEY\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), stockPrices.length > 0 && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        width: '800px',\n        height: '400px'\n      },\n      zoom: 2,\n      center: {\n        lat: 0,\n        lng: 0\n      },\n      children: stockPrices.map(sp => /*#__PURE__*/_jsxDEV(Marker, {\n        position: sp.location,\n        icon: getIcon(sp.change)\n      }, sp.fund.ticker, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(MarketWatch, \"CDSPwtRJdmJ8CyWLc4r4aCWt04k=\");\n_c = MarketWatch;\nfunction getIcon(change) {\n  if (change < 0) {\n    return 'https://freeiconshop.com/wp-content/uploads/edd/red-flag-flat.png';\n  } else if (change > 0) {\n    return 'https://freeiconshop.com/wp-content/uploads/edd/green-flag-flat.png';\n  } else {\n    return 'https://freeiconshop.com/wp-content/uploads/edd/yellow-flag-flat.png';\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"MarketWatch\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","indexFunds","name","ticker","locations","lat","lng","MarketWatch","_s","stockPrices","setStockPrices","error","setError","fetchPrices","prices","loc","fund","res","fetch","console","log","data","json","push","location","price","change","err","googleMapsApiKey","children","message","fileName","_jsxFileName","lineNumber","columnNumber","length","mapContainerStyle","width","height","zoom","center","map","sp","position","icon","getIcon","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst indexFunds = {\n  'United States': {\n    name: 'S&P 500',\n    ticker: 'SPY' \n  },\n  'Europe': {\n   name: 'Euro Stoxx 50',\n   ticker: 'STOXX50'\n  },\n  'Asia': {\n   name: 'Nikkei 225',  \n   ticker: 'NIKKEI225'\n  },\n  'Australia': {\n    name: 'S&P/ASX 200',\n    ticker: 'ASX200'\n  },\n  'Canada': {\n    name: 'S&P/TSX Composite',\n    ticker: 'TSX'\n  }\n};\n\nconst locations = [\n  {\n    name: 'United States',\n    lat: 37.0902,\n    lng: -95.7129\n  },\n  {\n    name: 'Europe',\n    lat: 54.5260,\n    lng: 15.2551  \n  },\n  {\n   name: 'Asia',\n   lat: 34.0479,\n   lng: 100.6197\n  },\n  {\n    name: 'Australia', \n    lat: -25.2744,\n    lng: 133.7751\n  },\n  {\n    name: 'Canada',\n    lat: 56.1304,\n    lng: -106.3468\n  }\n];\n\nexport default function MarketWatch() {\n\n  const [stockPrices, setStockPrices] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPrices = async () => {\n      try {\n        const prices = [];\n\n        for(let loc of locations) {\n          const fund = indexFunds[loc.name];\n          \n          const res = await fetch(`/api/price?ticker=${fund.ticker}`);\n          console.log(res);\n          \n          const data = await res.json();\n\n          prices.push({\n            location: loc,\n            fund: fund,\n            price: data.price,\n            change: data.change  \n          });\n        }\n\n        setStockPrices(prices);\n\n      } catch (err) {\n        setError(err);\n      }\n    };\n\n    fetchPrices();\n  }, []);\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"YOUR_API_KEY\" \n    >\n      {error && <p>{error.message}</p>}\n\n      {stockPrices.length > 0 &&\n        <GoogleMap\n          mapContainerStyle={{\n            width: '800px',\n            height: '400px'\n          }}\n          zoom={2}\n          center={{\n            lat: 0,\n            lng: 0\n          }}\n        >\n          {stockPrices.map(sp => (\n            <Marker\n              key={sp.fund.ticker}\n              position={sp.location}\n              icon={getIcon(sp.change)}\n            />\n          ))}\n        </GoogleMap>\n      }\n    </LoadScript>\n  );\n\n}\n\nfunction getIcon(change) {\n  if (change < 0) {\n    return 'https://freeiconshop.com/wp-content/uploads/edd/red-flag-flat.png';\n  } else if (change > 0) {\n    return 'https://freeiconshop.com/wp-content/uploads/edd/green-flag-flat.png';\n  } else {\n    return 'https://freeiconshop.com/wp-content/uploads/edd/yellow-flag-flat.png';\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}