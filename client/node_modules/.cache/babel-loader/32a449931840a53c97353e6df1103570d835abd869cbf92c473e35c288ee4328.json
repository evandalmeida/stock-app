{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LoadScript, GoogleMap, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MarketWatch() {\n  _s();\n  const [marketStatus, setMarketStatus] = useState({});\n  const containerStyle = {\n    width: '100%',\n    height: '400px'\n  };\n  const center = {\n    lat: 0,\n    lng: 0\n  };\n  const markets = [{\n    name: 'United States',\n    index: 'S&P 500'\n  }, {\n    name: 'Europe',\n    index: 'Euro Stoxx 50'\n  }, {\n    name: 'Asia',\n    index: 'Nikkei 225'\n  }, {\n    name: 'Australia',\n    index: 'S&P/ASX 200'\n  }, {\n    name: 'Canada',\n    index: 'S&P/TSX Composite'\n  }];\n  useEffect(() => {\n    const calculateMarketStatus = () => {\n      markets.forEach(market => {\n        fetch(`/api/search-stock?query=${market.index}`).then(response => {\n          if (!response.ok) {\n            throw new Error(`Network response was not ok: ${response.status}`);\n          }\n          return response.json();\n        }).then(indexData => {\n          const performance = indexData.performance;\n          const isMarketUp = performance > 0;\n          setMarketStatus(prevStatus => ({\n            ...prevStatus,\n            [market.name]: isMarketUp\n          }));\n        }).catch(error => {\n          console.error(`Error fetching index data for ${market.name}:`, error);\n        });\n      });\n    };\n    calculateMarketStatus();\n    const interval = setInterval(() => {\n      calculateMarketStatus();\n    }, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const getMarkerIcon = marketName => {\n    // Choose different marker icons based on marketStatus\n    return marketStatus[marketName] ? 'https://www.clipartmax.com/png/middle/182-1827658_pin-png-pin-icon-green.png' // Green marker icon\n    : 'https://www.clipartmax.com/png/middle/182-1827658_pin-png-pin-icon-red.png'; // Red marker icon\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: apiKey,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 2,\n      children: markets.map((market, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: center // You should replace this with the actual position of the market\n        ,\n        title: market.name,\n        icon: {\n          url: getMarkerIcon(market.name),\n          scaledSize: {\n            width: 32,\n            height: 32\n          }\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(MarketWatch, \"otSKLD9TN9yccTXSBZ5N2FB0mVI=\");\n_c = MarketWatch;\nvar _c;\n$RefreshReg$(_c, \"MarketWatch\");","map":{"version":3,"names":["React","useEffect","useState","LoadScript","GoogleMap","Marker","jsxDEV","_jsxDEV","MarketWatch","_s","marketStatus","setMarketStatus","containerStyle","width","height","center","lat","lng","markets","name","index","calculateMarketStatus","forEach","market","fetch","then","response","ok","Error","status","json","indexData","performance","isMarketUp","prevStatus","catch","error","console","interval","setInterval","clearInterval","getMarkerIcon","marketName","googleMapsApiKey","apiKey","children","mapContainerStyle","zoom","map","position","title","icon","url","scaledSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { LoadScript, GoogleMap, Marker } from '@react-google-maps/api';\n\nexport default function MarketWatch() {\n  const [marketStatus, setMarketStatus] = useState({});\n  const containerStyle = { width: '100%', height: '400px' };\n  const center = { lat: 0, lng: 0 };\n\n  const markets = [\n    { name: 'United States', index: 'S&P 500' },\n    { name: 'Europe', index: 'Euro Stoxx 50' },\n    { name: 'Asia', index: 'Nikkei 225' },\n    { name: 'Australia', index: 'S&P/ASX 200' },\n    { name: 'Canada', index: 'S&P/TSX Composite' },\n  ];\n\n  useEffect(() => {\n    const calculateMarketStatus = () => {\n      markets.forEach((market) => {\n        fetch(`/api/search-stock?query=${market.index}`)\n          .then((response) => {\n            if (!response.ok) {\n              throw new Error(`Network response was not ok: ${response.status}`);\n            }\n            return response.json();\n          })\n          .then((indexData) => {\n            const performance = indexData.performance;\n            const isMarketUp = performance > 0;\n            setMarketStatus((prevStatus) => ({\n              ...prevStatus,\n              [market.name]: isMarketUp,\n            }));\n          })\n          .catch((error) => {\n            console.error(`Error fetching index data for ${market.name}:`, error);\n          });\n      });\n    };\n\n    calculateMarketStatus();\n\n    const interval = setInterval(() => {\n      calculateMarketStatus();\n    }, 60000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const getMarkerIcon = (marketName) => {\n    // Choose different marker icons based on marketStatus\n    return marketStatus[marketName]\n      ? 'https://www.clipartmax.com/png/middle/182-1827658_pin-png-pin-icon-green.png' // Green marker icon\n      : 'https://www.clipartmax.com/png/middle/182-1827658_pin-png-pin-icon-red.png'; // Red marker icon\n  };\n\n  return (\n    <LoadScript googleMapsApiKey={apiKey}>\n      <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={2}>\n        {markets.map((market, index) => (\n          <Marker\n            key={index}\n            position={center} // You should replace this with the actual position of the market\n            title={market.name}\n            icon={{\n              url: getMarkerIcon(market.name),\n              scaledSize: { width: 32, height: 32 },\n            }}\n          />\n        ))}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}