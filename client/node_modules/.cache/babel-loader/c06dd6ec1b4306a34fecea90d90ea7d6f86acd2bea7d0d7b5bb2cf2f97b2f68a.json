{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '400px',\n  borderRadius: '5px'\n};\nconst center = {\n  lat: 32,\n  lng: 20\n};\nconst indexFunds = {\n  'United States': {\n    name: 'S&P 500',\n    ticker: 'SPY'\n  },\n  'Europe': {\n    name: 'Euro Stoxx 50',\n    ticker: 'STOXX50'\n  },\n  'Asia': {\n    name: 'Nikkei 225',\n    ticker: 'NIKKEI225'\n  },\n  'Australia': {\n    name: 'S&P/ASX 200',\n    ticker: 'ASX200'\n  },\n  'Canada': {\n    name: 'S&P/TSX Composite',\n    ticker: 'TSX'\n  }\n};\nconst locations = [{\n  name: 'United States',\n  lat: 37.0902,\n  lng: -95.7129\n}, {\n  name: 'Europe',\n  lat: 54.5260,\n  lng: 15.2551\n}, {\n  name: 'Asia',\n  lat: 34.0479,\n  lng: 100.6197\n}, {\n  name: 'Australia',\n  lat: -25.2744,\n  lng: 133.7751\n}, {\n  name: 'Canada',\n  lat: 56.1304,\n  lng: -106.3468\n}];\nexport default function MarketWatch() {\n  _s();\n  const [apiKey, setApiKey] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [stockPrices, setStockPrices] = useState([]);\n  useEffect(() => {\n    fetch('/api/maps/config').then(response => response.json()).then(data => setApiKey(data.apiKey)).catch(error => {\n      console.error(\"Error fetching Google Maps API key:\", error);\n      setError('Error loading Google Maps!');\n    });\n  }, []);\n  useEffect(() => {\n    // Fetch and update stock prices for each index fund here\n    const fetchStockPrices = async () => {\n      const updatedStockPrices = [];\n      for (const location of locations) {\n        const fund = indexFunds[location.name];\n        try {\n          const response = await fetch(`/api/fetch-stock-price?ticker=${fund.ticker}`);\n          const data = await response.json();\n          updatedStockPrices.push({\n            location,\n            fund,\n            data\n          });\n\n          // Log the fetched data to the console\n          console.log(`Fetched data for ${fund.name} (${location.name}):`, data);\n        } catch (error) {\n          console.error(`Error fetching stock price for ${fund.name} (${location.name}):`, error);\n          updatedStockPrices.push({\n            location,\n            fund,\n            data: null\n          }); // Push null if there's an error\n        }\n      }\n\n      setStockPrices(updatedStockPrices);\n    };\n    fetchStockPrices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : apiKey ? /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: apiKey,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 2,\n        children: stockPrices.map((item, index) => {\n          const {\n            location,\n            fund,\n            data\n          } = item;\n          const isMarketDown = data ? data.currentPrice < data.yesterdayPrice : false;\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: location,\n            title: `${fund.name} (${location.name})`,\n            icon: {\n              url: isMarketDown ? 'https://png.pngtree.com/png-vector/20221024/ourmid/pngtree-red-pin-marker-png-image_6385786.png' : 'https://www.clipartmax.com/png/middle/182-1827658_pin-png-pin-icon-green.png',\n              scaledSize: {\n                width: 32,\n                height: 32\n              }\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(MarketWatch, \"WSPO0ZMRysn5rI3VSgMRLNi3bnM=\");\n_c = MarketWatch;\nvar _c;\n$RefreshReg$(_c, \"MarketWatch\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","borderRadius","center","lat","lng","indexFunds","name","ticker","locations","MarketWatch","_s","apiKey","setApiKey","error","setError","stockPrices","setStockPrices","fetch","then","response","json","data","catch","console","fetchStockPrices","updatedStockPrices","location","fund","push","log","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapContainerStyle","zoom","map","item","index","isMarketDown","currentPrice","yesterdayPrice","position","title","icon","url","scaledSize","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '800px',\n  height: '400px',\n  borderRadius: '5px'\n};\n\nconst center = {\n  lat: 32,\n  lng: 20\n};\n\nconst indexFunds = {\n  'United States': { name: 'S&P 500', ticker: 'SPY' },\n  'Europe': { name: 'Euro Stoxx 50', ticker: 'STOXX50' },\n  'Asia': { name: 'Nikkei 225', ticker: 'NIKKEI225' },\n  'Australia': { name: 'S&P/ASX 200', ticker: 'ASX200' },\n  'Canada': { name: 'S&P/TSX Composite', ticker: 'TSX' }\n};\n\nconst locations = [\n  { name: 'United States', lat: 37.0902, lng: -95.7129 },\n  { name: 'Europe', lat: 54.5260, lng: 15.2551 },\n  { name: 'Asia', lat: 34.0479, lng: 100.6197 },\n  { name: 'Australia', lat: -25.2744, lng: 133.7751 },\n  { name: 'Canada', lat: 56.1304, lng: -106.3468 }\n];\n\nexport default function MarketWatch() {\n  const [apiKey, setApiKey] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [stockPrices, setStockPrices] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/maps/config')\n      .then(response => response.json())\n      .then(data => setApiKey(data.apiKey))\n      .catch(error => {\n        console.error(\"Error fetching Google Maps API key:\", error);\n        setError('Error loading Google Maps!');\n      });\n  }, []);\n\n  useEffect(() => {\n    // Fetch and update stock prices for each index fund here\n    const fetchStockPrices = async () => {\n      const updatedStockPrices = [];\n      for (const location of locations) {\n        const fund = indexFunds[location.name];\n        try {\n          const response = await fetch(`/api/fetch-stock-price?ticker=${fund.ticker}`);\n          const data = await response.json();\n          updatedStockPrices.push({ location, fund, data });\n          \n          // Log the fetched data to the console\n          console.log(`Fetched data for ${fund.name} (${location.name}):`, data);\n        } catch (error) {\n          console.error(`Error fetching stock price for ${fund.name} (${location.name}):`, error);\n          updatedStockPrices.push({ location, fund, data: null }); // Push null if there's an error\n        }\n      }\n      setStockPrices(updatedStockPrices);\n    };\n\n    fetchStockPrices();\n  }, []);\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : apiKey ? (\n        <LoadScript googleMapsApiKey={apiKey}>\n          <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={2}>\n            {stockPrices.map((item, index) => {\n              const { location, fund, data } = item;\n              const isMarketDown = data ? data.currentPrice < data.yesterdayPrice : false;\n              return (\n                <Marker\n                  key={index}\n                  position={location}\n                  title={`${fund.name} (${location.name})`}\n                  icon={{\n                    url: isMarketDown\n                      ? 'https://png.pngtree.com/png-vector/20221024/ourmid/pngtree-red-pin-marker-png-image_6385786.png'\n                      : 'https://www.clipartmax.com/png/middle/182-1827658_pin-png-pin-icon-green.png',\n                    scaledSize: { width: 32, height: 32 }\n                  }}\n                />\n              );\n            })}\n          </GoogleMap>\n        </LoadScript>\n      ) : (\n        <p>Loading map...</p>\n      )}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,OAAO;EACfC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,EAAE;EACPC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,UAAU,GAAG;EACjB,eAAe,EAAE;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC;EACnD,QAAQ,EAAE;IAAED,IAAI,EAAE,eAAe;IAAEC,MAAM,EAAE;EAAU,CAAC;EACtD,MAAM,EAAE;IAAED,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAY,CAAC;EACnD,WAAW,EAAE;IAAED,IAAI,EAAE,aAAa;IAAEC,MAAM,EAAE;EAAS,CAAC;EACtD,QAAQ,EAAE;IAAED,IAAI,EAAE,mBAAmB;IAAEC,MAAM,EAAE;EAAM;AACvD,CAAC;AAED,MAAMC,SAAS,GAAG,CAChB;EAAEF,IAAI,EAAE,eAAe;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE,CAAC;AAAQ,CAAC,EACtD;EAAEE,IAAI,EAAE,QAAQ;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC,EAC9C;EAAEE,IAAI,EAAE,MAAM;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAS,CAAC,EAC7C;EAAEE,IAAI,EAAE,WAAW;EAAEH,GAAG,EAAE,CAAC,OAAO;EAAEC,GAAG,EAAE;AAAS,CAAC,EACnD;EAAEE,IAAI,EAAE,QAAQ;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE,CAAC;AAAS,CAAC,CACjD;AAED,eAAe,SAASK,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd4B,KAAK,CAAC,kBAAkB,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,SAAS,CAACS,IAAI,CAACV,MAAM,CAAC,CAAC,CACpCW,KAAK,CAACT,KAAK,IAAI;MACdU,OAAO,CAACV,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3DC,QAAQ,CAAC,4BAA4B,CAAC;IACxC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACd;IACA,MAAMmC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,kBAAkB,GAAG,EAAE;MAC7B,KAAK,MAAMC,QAAQ,IAAIlB,SAAS,EAAE;QAChC,MAAMmB,IAAI,GAAGtB,UAAU,CAACqB,QAAQ,CAACpB,IAAI,CAAC;QACtC,IAAI;UACF,MAAMa,QAAQ,GAAG,MAAMF,KAAK,CAAE,iCAAgCU,IAAI,CAACpB,MAAO,EAAC,CAAC;UAC5E,MAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;UAClCK,kBAAkB,CAACG,IAAI,CAAC;YAAEF,QAAQ;YAAEC,IAAI;YAAEN;UAAK,CAAC,CAAC;;UAEjD;UACAE,OAAO,CAACM,GAAG,CAAE,oBAAmBF,IAAI,CAACrB,IAAK,KAAIoB,QAAQ,CAACpB,IAAK,IAAG,EAAEe,IAAI,CAAC;QACxE,CAAC,CAAC,OAAOR,KAAK,EAAE;UACdU,OAAO,CAACV,KAAK,CAAE,kCAAiCc,IAAI,CAACrB,IAAK,KAAIoB,QAAQ,CAACpB,IAAK,IAAG,EAAEO,KAAK,CAAC;UACvFY,kBAAkB,CAACG,IAAI,CAAC;YAAEF,QAAQ;YAAEC,IAAI;YAAEN,IAAI,EAAE;UAAK,CAAC,CAAC,CAAC,CAAC;QAC3D;MACF;;MACAL,cAAc,CAACS,kBAAkB,CAAC;IACpC,CAAC;IAEDD,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA,CAAAE,SAAA;IAAAiC,QAAA,EACGjB,KAAK,gBACJlB,OAAA;MAAAmC,QAAA,EAAIjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GACZvB,MAAM,gBACRhB,OAAA,CAACH,UAAU;MAAC2C,gBAAgB,EAAExB,MAAO;MAAAmB,QAAA,eACnCnC,OAAA,CAACJ,SAAS;QAAC6C,iBAAiB,EAAEtC,cAAe;QAACI,MAAM,EAAEA,MAAO;QAACmC,IAAI,EAAE,CAAE;QAAAP,QAAA,EACnEf,WAAW,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UAChC,MAAM;YAAEd,QAAQ;YAAEC,IAAI;YAAEN;UAAK,CAAC,GAAGkB,IAAI;UACrC,MAAME,YAAY,GAAGpB,IAAI,GAAGA,IAAI,CAACqB,YAAY,GAAGrB,IAAI,CAACsB,cAAc,GAAG,KAAK;UAC3E,oBACEhD,OAAA,CAACF,MAAM;YAELmD,QAAQ,EAAElB,QAAS;YACnBmB,KAAK,EAAG,GAAElB,IAAI,CAACrB,IAAK,KAAIoB,QAAQ,CAACpB,IAAK,GAAG;YACzCwC,IAAI,EAAE;cACJC,GAAG,EAAEN,YAAY,GACb,iGAAiG,GACjG,8EAA8E;cAClFO,UAAU,EAAE;gBAAEjD,KAAK,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAG;YACtC;UAAE,GARGwC,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASX,CAAC;QAEN,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAEbvC,OAAA;MAAAmC,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACrB,gBACD,CAAC;AAEP;AAACxB,EAAA,CAtEuBD,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}