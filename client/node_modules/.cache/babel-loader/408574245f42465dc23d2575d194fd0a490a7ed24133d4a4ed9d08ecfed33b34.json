{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '400px',\n  borderRadius: '5px'\n};\nconst center = {\n  lat: 37.0902,\n  // Adjust the center coordinates as needed\n  lng: -95.7129 // Adjust the center coordinates as needed\n};\n\nexport default function MarketWatch() {\n  _s();\n  const [apiKey, setApiKey] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [marketStatus, setMarketStatus] = useState(false); // Track market status for the United States\n\n  useEffect(() => {\n    fetch('/api/maps/config').then(response => response.json()).then(data => setApiKey(data.apiKey)).catch(error => {\n      console.error(\"Error fetching Google Maps API key:\", error);\n      setError('Error loading Google Maps!');\n    });\n  }, []);\n  useEffect(() => {\n    // Fetch stock data and determine market status for the United States\n    fetch('/api/search-stock?query=United%20States');\n    fetch(`/api/search-stock?query=${encodeURIComponent(location.name)}`).then(response => response.json()).then(stockData => {\n      // Determine market status based on your criteria (e.g., comparing stock price)\n      const isMarketUp = stockData && stockData.price > 0; // Example condition\n      setMarketStatus(isMarketUp);\n    }).catch(error => {\n      console.error(\"Error fetching stock data for United States:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : apiKey ? /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: apiKey,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 4,\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: center,\n          title: \"United States\",\n          icon: {\n            // Set the marker icon based on market status\n            url: marketStatus ? './green.png' // Green marker icon path\n            : './red.jpeg',\n            // Red marker icon path\n            scaledSize: {\n              width: 32,\n              height: 32\n            } // Adjust width and height as needed\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(MarketWatch, \"kaj4aFiVJOA2HpLZIlwfeo4NxNo=\");\n_c = MarketWatch;\nvar _c;\n$RefreshReg$(_c, \"MarketWatch\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","borderRadius","center","lat","lng","MarketWatch","_s","apiKey","setApiKey","error","setError","marketStatus","setMarketStatus","fetch","then","response","json","data","catch","console","encodeURIComponent","location","name","stockData","isMarketUp","price","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapContainerStyle","zoom","position","title","icon","url","scaledSize","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '800px',\n  height: '400px',\n  borderRadius: '5px'\n};\n\nconst center = {\n  lat: 37.0902, // Adjust the center coordinates as needed\n  lng: -95.7129, // Adjust the center coordinates as needed\n};\n\nexport default function MarketWatch() {\n  const [apiKey, setApiKey] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [marketStatus, setMarketStatus] = useState(false); // Track market status for the United States\n\n  useEffect(() => {\n    fetch('/api/maps/config')\n      .then(response => response.json())\n      .then(data => setApiKey(data.apiKey))\n      .catch(error => {\n        console.error(\"Error fetching Google Maps API key:\", error);\n        setError('Error loading Google Maps!');\n      });\n  }, []);\n\n  useEffect(() => {\n    // Fetch stock data and determine market status for the United States\n    fetch('/api/search-stock?query=United%20States')\n    fetch(`/api/search-stock?query=${encodeURIComponent(location.name)}`)\n\n      .then(response => response.json())\n      .then(stockData => {\n        // Determine market status based on your criteria (e.g., comparing stock price)\n        const isMarketUp = stockData && stockData.price > 0; // Example condition\n        setMarketStatus(isMarketUp);\n      })\n      .catch(error => {\n        console.error(\"Error fetching stock data for United States:\", error);\n      });\n  }, []);\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : apiKey ? (\n        <LoadScript googleMapsApiKey={apiKey}>\n          <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={4}>\n            <Marker\n              position={center}\n              title=\"United States\"\n              icon={{\n                // Set the marker icon based on market status\n                url: marketStatus\n                  ? './green.png' // Green marker icon path\n                  : './red.jpeg', // Red marker icon path\n                scaledSize: { width: 32, height: 32 } // Adjust width and height as needed\n              }}\n            />\n          </GoogleMap>\n        </LoadScript>\n      ) : (\n        <p>Loading map...</p>\n      )}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}