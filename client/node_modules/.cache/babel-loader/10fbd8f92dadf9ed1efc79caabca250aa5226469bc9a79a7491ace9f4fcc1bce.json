{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport yahoofinance from 'yahoofinance'; // Import the Yahoo Finance library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '400px',\n  borderRadius: '5px'\n};\nconst center = {\n  lat: 32,\n  lng: 20\n};\nconst indexFunds = {\n  'United States': {\n    name: 'S&P 500',\n    ticker: '^GSPC'\n  },\n  'Europe': {\n    name: 'Euro Stoxx 50',\n    ticker: '^STOXX50E'\n  },\n  'Asia': {\n    name: 'Nikkei 225',\n    ticker: '^N225'\n  },\n  'Australia': {\n    name: 'S&P/ASX 200',\n    ticker: '^AXJO'\n  },\n  'Canada': {\n    name: 'S&P/TSX Composite',\n    ticker: '^GSPTSE'\n  }\n};\nconst locations = [{\n  name: 'United States',\n  lat: 30.0902,\n  lng: -95.7129\n}, {\n  name: 'Europe',\n  lat: 54.5260,\n  lng: 15.2551\n}, {\n  name: 'Asia',\n  lat: 34.0479,\n  lng: 100.6197\n}, {\n  name: 'Australia',\n  lat: -30.2744,\n  lng: 133.7751\n}, {\n  name: 'Canada',\n  lat: 50.1304,\n  lng: -106.3468\n}\n// Add more locations as needed\n];\n\nexport default function MarketWatch() {\n  _s();\n  const [googleApiKey, setGoogleApiKey] = useState('');\n  const [error, setError] = useState(null);\n  const [locationData, setLocationData] = useState(locations);\n  useEffect(() => {\n    // Fetch the Google Maps API key\n    axios.get('/api/google-maps-config') // Update with your actual backend endpoint\n    .then(response => response.data.apiKey).then(data => setGoogleApiKey(data)).catch(error => {\n      console.error('Error fetching Google Maps API key:', error);\n      setError('Error loading Google Maps!');\n    });\n\n    // Fetch historical data for multiple tickers using Yahoo Finance API\n    const fetchHistoricalData = async () => {\n      try {\n        // Example: Fetch historical data for the S&P 500 (^GSPC)\n        const historicalData = await yahoofinance.HistoricalPrices('^GSPC').to_dfs();\n\n        // Update marker data based on historical data\n        updateMarkers(historicalData);\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n        setError('Error loading historical data!');\n      }\n    };\n    fetchHistoricalData();\n  }, []);\n  const updateMarkers = historicalData => {\n    if (historicalData) {\n      const updatedLocations = locationData.map(location => {\n        const indexFund = indexFunds[location.name];\n        if (indexFund && historicalData[indexFund.ticker]) {\n          const historicalPrices = historicalData[indexFund.ticker];\n          const currentPrice = historicalPrices[historicalPrices.length - 1].Close;\n          const previousPrice = historicalPrices[historicalPrices.length - 2].Close;\n          const isPriceIncreased = currentPrice > previousPrice;\n\n          // Add a new property 'isPriceIncreased' to location data\n          return {\n            ...location,\n            isPriceIncreased\n          };\n        }\n        return location;\n      });\n      setLocationData(updatedLocations);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this) : googleApiKey ? /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: googleApiKey,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 2,\n        children: locationData.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: location,\n          title: location.name,\n          icon: {\n            url: location.isPriceIncreased ? 'https://www.freeiconspng.com/uploads/green-spot-light-png-11.png' : 'https://www.freeiconspng.com/uploads/red-spot-light-png-6.png',\n            scaledSize: {\n              width: 100,\n              height: 100\n            }\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(MarketWatch, \"1KkoSovqDfu6t1TLIspdxWjBRRY=\");\n_c = MarketWatch;\nvar _c;\n$RefreshReg$(_c, \"MarketWatch\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","axios","yahoofinance","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","borderRadius","center","lat","lng","indexFunds","name","ticker","locations","MarketWatch","_s","googleApiKey","setGoogleApiKey","error","setError","locationData","setLocationData","get","then","response","data","apiKey","catch","console","fetchHistoricalData","historicalData","HistoricalPrices","to_dfs","updateMarkers","updatedLocations","map","location","indexFund","historicalPrices","currentPrice","length","Close","previousPrice","isPriceIncreased","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapContainerStyle","zoom","index","position","title","icon","url","scaledSize","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport yahoofinance from 'yahoofinance'; // Import the Yahoo Finance library\n\nconst containerStyle = {\n  width: '800px',\n  height: '400px',\n  borderRadius: '5px'\n};\n\nconst center = {\n  lat: 32,\n  lng: 20\n};\n\nconst indexFunds = {\n  'United States': {\n    name: 'S&P 500',\n    ticker: '^GSPC'\n  },\n  'Europe': {\n    name: 'Euro Stoxx 50',\n    ticker: '^STOXX50E'\n  },\n  'Asia': {\n    name: 'Nikkei 225',\n    ticker: '^N225'\n  },\n  'Australia': {\n    name: 'S&P/ASX 200',\n    ticker: '^AXJO'\n  },\n  'Canada': {\n    name: 'S&P/TSX Composite',\n    ticker: '^GSPTSE'\n  }\n};\n\nconst locations = [\n  {\n    name: 'United States',\n    lat: 30.0902,\n    lng: -95.7129\n  },\n  {\n    name: 'Europe',\n    lat: 54.5260,\n    lng: 15.2551\n  },\n  {\n    name: 'Asia',\n    lat: 34.0479,\n    lng: 100.6197\n  },\n  {\n    name: 'Australia',\n    lat: -30.2744,\n    lng: 133.7751\n  },\n  {\n    name: 'Canada',\n    lat: 50.1304,\n    lng: -106.3468\n  },\n  // Add more locations as needed\n];\n\nexport default function MarketWatch() {\n  const [googleApiKey, setGoogleApiKey] = useState('');\n  const [error, setError] = useState(null);\n  const [locationData, setLocationData] = useState(locations);\n\n  useEffect(() => {\n    // Fetch the Google Maps API key\n    axios.get('/api/google-maps-config') // Update with your actual backend endpoint\n      .then((response) => response.data.apiKey)\n      .then((data) => setGoogleApiKey(data))\n      .catch((error) => {\n        console.error('Error fetching Google Maps API key:', error);\n        setError('Error loading Google Maps!');\n      });\n\n    // Fetch historical data for multiple tickers using Yahoo Finance API\n    const fetchHistoricalData = async () => {\n      try {\n        // Example: Fetch historical data for the S&P 500 (^GSPC)\n        const historicalData = await yahoofinance.HistoricalPrices('^GSPC').to_dfs();\n\n        // Update marker data based on historical data\n        updateMarkers(historicalData);\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n        setError('Error loading historical data!');\n      }\n    };\n\n    fetchHistoricalData();\n  }, []);\n\n  const updateMarkers = (historicalData) => {\n    if (historicalData) {\n      const updatedLocations = locationData.map((location) => {\n        const indexFund = indexFunds[location.name];\n        if (indexFund && historicalData[indexFund.ticker]) {\n          const historicalPrices = historicalData[indexFund.ticker];\n          const currentPrice = historicalPrices[historicalPrices.length - 1].Close;\n          const previousPrice = historicalPrices[historicalPrices.length - 2].Close;\n          const isPriceIncreased = currentPrice > previousPrice;\n\n          // Add a new property 'isPriceIncreased' to location data\n          return {\n            ...location,\n            isPriceIncreased,\n          };\n        }\n        return location;\n      });\n\n      setLocationData(updatedLocations);\n    }\n  };\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : googleApiKey ? (\n        <LoadScript googleMapsApiKey={googleApiKey}>\n          <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={2}>\n            {locationData.map((location, index) => (\n              <Marker\n                key={index}\n                position={location}\n                title={location.name}\n                icon={{\n                  url: location.isPriceIncreased\n                    ? 'https://www.freeiconspng.com/uploads/green-spot-light-png-11.png'\n                    : 'https://www.freeiconspng.com/uploads/red-spot-light-png-6.png',\n                  scaledSize: { width: 100, height: 100 },\n                }}\n              />\n            ))}\n          </GoogleMap>\n        </LoadScript>\n      ) : (\n        <p>Loading map...</p>\n      )}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,OAAO;EACfC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,EAAE;EACPC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,UAAU,GAAG;EACjB,eAAe,EAAE;IACfC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC;EACD,QAAQ,EAAE;IACRD,IAAI,EAAE,eAAe;IACrBC,MAAM,EAAE;EACV,CAAC;EACD,MAAM,EAAE;IACND,IAAI,EAAE,YAAY;IAClBC,MAAM,EAAE;EACV,CAAC;EACD,WAAW,EAAE;IACXD,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE;EACV,CAAC;EACD,QAAQ,EAAE;IACRD,IAAI,EAAE,mBAAmB;IACzBC,MAAM,EAAE;EACV;AACF,CAAC;AAED,MAAMC,SAAS,GAAG,CAChB;EACEF,IAAI,EAAE,eAAe;EACrBH,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE,CAAC;AACR,CAAC,EACD;EACEE,IAAI,EAAE,QAAQ;EACdH,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC,EACD;EACEE,IAAI,EAAE,MAAM;EACZH,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC,EACD;EACEE,IAAI,EAAE,WAAW;EACjBH,GAAG,EAAE,CAAC,OAAO;EACbC,GAAG,EAAE;AACP,CAAC,EACD;EACEE,IAAI,EAAE,QAAQ;EACdH,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE,CAAC;AACR;AACA;AAAA,CACD;;AAED,eAAe,SAASK,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAACoB,SAAS,CAAC;EAE3DrB,SAAS,CAAC,MAAM;IACd;IACAK,KAAK,CAACyB,GAAG,CAAC,yBAAyB,CAAC,CAAC;IAAA,CAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC,CACxCH,IAAI,CAAEE,IAAI,IAAKR,eAAe,CAACQ,IAAI,CAAC,CAAC,CACrCE,KAAK,CAAET,KAAK,IAAK;MAChBU,OAAO,CAACV,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3DC,QAAQ,CAAC,4BAA4B,CAAC;IACxC,CAAC,CAAC;;IAEJ;IACA,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF;QACA,MAAMC,cAAc,GAAG,MAAMhC,YAAY,CAACiC,gBAAgB,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,CAAC;;QAE5E;QACAC,aAAa,CAACH,cAAc,CAAC;MAC/B,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACdU,OAAO,CAACV,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDC,QAAQ,CAAC,gCAAgC,CAAC;MAC5C;IACF,CAAC;IAEDU,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,aAAa,GAAIH,cAAc,IAAK;IACxC,IAAIA,cAAc,EAAE;MAClB,MAAMI,gBAAgB,GAAGd,YAAY,CAACe,GAAG,CAAEC,QAAQ,IAAK;QACtD,MAAMC,SAAS,GAAG3B,UAAU,CAAC0B,QAAQ,CAACzB,IAAI,CAAC;QAC3C,IAAI0B,SAAS,IAAIP,cAAc,CAACO,SAAS,CAACzB,MAAM,CAAC,EAAE;UACjD,MAAM0B,gBAAgB,GAAGR,cAAc,CAACO,SAAS,CAACzB,MAAM,CAAC;UACzD,MAAM2B,YAAY,GAAGD,gBAAgB,CAACA,gBAAgB,CAACE,MAAM,GAAG,CAAC,CAAC,CAACC,KAAK;UACxE,MAAMC,aAAa,GAAGJ,gBAAgB,CAACA,gBAAgB,CAACE,MAAM,GAAG,CAAC,CAAC,CAACC,KAAK;UACzE,MAAME,gBAAgB,GAAGJ,YAAY,GAAGG,aAAa;;UAErD;UACA,OAAO;YACL,GAAGN,QAAQ;YACXO;UACF,CAAC;QACH;QACA,OAAOP,QAAQ;MACjB,CAAC,CAAC;MAEFf,eAAe,CAACa,gBAAgB,CAAC;IACnC;EACF,CAAC;EAED,oBACElC,OAAA,CAAAE,SAAA;IAAA0C,QAAA,EACG1B,KAAK,gBACJlB,OAAA;MAAA4C,QAAA,EAAI1B;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GACZhC,YAAY,gBACdhB,OAAA,CAACL,UAAU;MAACsD,gBAAgB,EAAEjC,YAAa;MAAA4B,QAAA,eACzC5C,OAAA,CAACN,SAAS;QAACwD,iBAAiB,EAAE/C,cAAe;QAACI,MAAM,EAAEA,MAAO;QAAC4C,IAAI,EAAE,CAAE;QAAAP,QAAA,EACnExB,YAAY,CAACe,GAAG,CAAC,CAACC,QAAQ,EAAEgB,KAAK,kBAChCpD,OAAA,CAACJ,MAAM;UAELyD,QAAQ,EAAEjB,QAAS;UACnBkB,KAAK,EAAElB,QAAQ,CAACzB,IAAK;UACrB4C,IAAI,EAAE;YACJC,GAAG,EAAEpB,QAAQ,CAACO,gBAAgB,GAC1B,kEAAkE,GAClE,+DAA+D;YACnEc,UAAU,EAAE;cAAErD,KAAK,EAAE,GAAG;cAAEC,MAAM,EAAE;YAAI;UACxC;QAAE,GARG+C,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAEbhD,OAAA;MAAA4C,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACrB,gBACD,CAAC;AAEP;AAACjC,EAAA,CAlFuBD,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}