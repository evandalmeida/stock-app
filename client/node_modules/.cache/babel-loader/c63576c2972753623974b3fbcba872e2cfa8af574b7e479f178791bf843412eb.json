{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '400px',\n  borderRadius: '5px'\n};\nconst center = {\n  lat: 32,\n  lng: 20\n};\nconst locations = [{\n  name: 'United States',\n  lat: 37.0902,\n  lng: -95.7129\n}, {\n  name: 'Europe',\n  lat: 54.5260,\n  lng: 15.2551\n}, {\n  name: 'Asia',\n  lat: 34.0479,\n  lng: 100.6197\n}, {\n  name: 'Australia',\n  lat: -25.2744,\n  lng: 133.7751\n}, {\n  name: 'Canada',\n  lat: 56.1304,\n  lng: -106.3468\n}];\nexport default function MarketWatch() {\n  _s();\n  const [apiKey, setApiKey] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [marketStatus, setMarketStatus] = useState({}); // Track market status for each location\n\n  useEffect(() => {\n    fetch('/api/maps/config').then(response => response.json()).then(data => setApiKey(data.apiKey)).catch(error => {\n      console.error(\"Error fetching Google Maps API key:\", error);\n      setError('Error loading Google Maps!');\n    });\n  }, []);\n  useEffect(() => {\n    // Fetch stock data and determine market status for each location\n    locations.forEach(location => {\n      fetch(`/api/search-stock?query=${location.name}`).then(response => response.json()).then(stockData => {\n        // Determine market status based on your criteria (e.g., comparing stock price)\n        const isMarketUp = stockData && stockData.price > 0; // Example condition\n        setMarketStatus(prevStatus => ({\n          ...prevStatus,\n          [location.name]: isMarketUp\n        }));\n      }).catch(error => {\n        console.error(`Error fetching stock data for ${location.name}:`, error);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : apiKey ? /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: apiKey,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 2,\n        children: locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: location,\n          title: location.name,\n          icon: {\n            // Set the marker icon based on market status\n            url: marketStatus[location.name] ? '/public/green.png' // Green marker icon path\n            : '/public/red.jpeg',\n            // Red marker icon path\n            scaledSize: {\n              width: 32,\n              height: 32\n            } // Adjust width and height as needed\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(marketStatus).map(([location, isUp]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [location, \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `market-icon ${isUp ? 'green' : 'red'}`,\n          children: isUp ? 'Market Up' : 'Market Down'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, location, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .market-icon {\n            display: inline-block;\n            width: 16px;\n            height: 16px;\n            border-radius: 50%;\n            margin-left: 8px;\n          }\n\n          .green {\n            background-color: green;\n          }\n\n          .red {\n            background-color: red;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MarketWatch, \"MmaBAe2PujbEzXIMzBgpnIEXGaQ=\");\n_c = MarketWatch;\nvar _c;\n$RefreshReg$(_c, \"MarketWatch\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","borderRadius","center","lat","lng","locations","name","MarketWatch","_s","apiKey","setApiKey","error","setError","marketStatus","setMarketStatus","fetch","then","response","json","data","catch","console","forEach","location","stockData","isMarketUp","price","prevStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapContainerStyle","zoom","map","index","position","title","icon","url","scaledSize","Object","entries","isUp","className","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/client/src/components/UserPanel/MarketWatch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '800px',\n  height: '400px',\n  borderRadius: '5px'\n};\n\nconst center = {\n  lat: 32,\n  lng: 20\n};\n\nconst locations = [\n  { name: 'United States', lat: 37.0902, lng: -95.7129 },\n  { name: 'Europe', lat: 54.5260, lng: 15.2551 },\n  { name: 'Asia', lat: 34.0479, lng: 100.6197 },\n  { name: 'Australia', lat: -25.2744, lng: 133.7751 },\n  { name: 'Canada', lat: 56.1304, lng: -106.3468 }\n];\n\nexport default function MarketWatch() {\n  const [apiKey, setApiKey] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [marketStatus, setMarketStatus] = useState({}); // Track market status for each location\n\n  useEffect(() => {\n    fetch('/api/maps/config')\n      .then(response => response.json())\n      .then(data => setApiKey(data.apiKey))\n      .catch(error => {\n        console.error(\"Error fetching Google Maps API key:\", error);\n        setError('Error loading Google Maps!');\n      });\n  }, []);\n\n  useEffect(() => {\n    // Fetch stock data and determine market status for each location\n    locations.forEach(location => {\n      fetch(`/api/search-stock?query=${location.name}`)\n        .then(response => response.json())\n        .then(stockData => {\n          // Determine market status based on your criteria (e.g., comparing stock price)\n          const isMarketUp = stockData && stockData.price > 0; // Example condition\n          setMarketStatus(prevStatus => ({\n            ...prevStatus,\n            [location.name]: isMarketUp\n          }));\n        })\n        .catch(error => {\n          console.error(`Error fetching stock data for ${location.name}:`, error);\n        });\n    });\n  }, []);\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : apiKey ? (\n        <LoadScript googleMapsApiKey={apiKey}>\n          <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={2}>\n            {locations.map((location, index) => (\n              <Marker\n                key={index}\n                position={location}\n                title={location.name}\n                icon={{\n                  // Set the marker icon based on market status\n                  url: marketStatus[location.name]\n                    ? '/public/green.png' // Green marker icon path\n                    : '/public/red.jpeg', // Red marker icon path\n                  scaledSize: { width: 32, height: 32 } // Adjust width and height as needed\n                }}\n              />\n            ))}\n          </GoogleMap>\n        </LoadScript>\n      ) : (\n        <p>Loading map...</p>\n      )}\n      <div>\n        {Object.entries(marketStatus).map(([location, isUp]) => (\n          <div key={location}>\n            {location}: \n            <span className={`market-icon ${isUp ? 'green' : 'red'}`}>\n              {isUp ? 'Market Up' : 'Market Down'}\n            </span>\n          </div>\n        ))}\n      </div>\n      <style>\n        {`\n          .market-icon {\n            display: inline-block;\n            width: 16px;\n            height: 16px;\n            border-radius: 50%;\n            margin-left: 8px;\n          }\n\n          .green {\n            background-color: green;\n          }\n\n          .red {\n            background-color: red;\n          }\n        `}\n      </style>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,OAAO;EACfC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,EAAE;EACPC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,SAAS,GAAG,CAChB;EAAEC,IAAI,EAAE,eAAe;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE,CAAC;AAAQ,CAAC,EACtD;EAAEE,IAAI,EAAE,QAAQ;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC,EAC9C;EAAEE,IAAI,EAAE,MAAM;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAS,CAAC,EAC7C;EAAEE,IAAI,EAAE,WAAW;EAAEH,GAAG,EAAE,CAAC,OAAO;EAAEC,GAAG,EAAE;AAAS,CAAC,EACnD;EAAEE,IAAI,EAAE,QAAQ;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE,CAAC;AAAS,CAAC,CACjD;AAED,eAAe,SAASG,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEtDD,SAAS,CAAC,MAAM;IACd0B,KAAK,CAAC,kBAAkB,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,SAAS,CAACS,IAAI,CAACV,MAAM,CAAC,CAAC,CACpCW,KAAK,CAACT,KAAK,IAAI;MACdU,OAAO,CAACV,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3DC,QAAQ,CAAC,4BAA4B,CAAC;IACxC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACd;IACAgB,SAAS,CAACiB,OAAO,CAACC,QAAQ,IAAI;MAC5BR,KAAK,CAAE,2BAA0BQ,QAAQ,CAACjB,IAAK,EAAC,CAAC,CAC9CU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACQ,SAAS,IAAI;QACjB;QACA,MAAMC,UAAU,GAAGD,SAAS,IAAIA,SAAS,CAACE,KAAK,GAAG,CAAC,CAAC,CAAC;QACrDZ,eAAe,CAACa,UAAU,KAAK;UAC7B,GAAGA,UAAU;UACb,CAACJ,QAAQ,CAACjB,IAAI,GAAGmB;QACnB,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CACDL,KAAK,CAACT,KAAK,IAAI;QACdU,OAAO,CAACV,KAAK,CAAE,iCAAgCY,QAAQ,CAACjB,IAAK,GAAE,EAAEK,KAAK,CAAC;MACzE,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA,CAAAE,SAAA;IAAA+B,QAAA,GACGjB,KAAK,gBACJhB,OAAA;MAAAiC,QAAA,EAAIjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GACZvB,MAAM,gBACRd,OAAA,CAACH,UAAU;MAACyC,gBAAgB,EAAExB,MAAO;MAAAmB,QAAA,eACnCjC,OAAA,CAACJ,SAAS;QAAC2C,iBAAiB,EAAEpC,cAAe;QAACI,MAAM,EAAEA,MAAO;QAACiC,IAAI,EAAE,CAAE;QAAAP,QAAA,EACnEvB,SAAS,CAAC+B,GAAG,CAAC,CAACb,QAAQ,EAAEc,KAAK,kBAC7B1C,OAAA,CAACF,MAAM;UAEL6C,QAAQ,EAAEf,QAAS;UACnBgB,KAAK,EAAEhB,QAAQ,CAACjB,IAAK;UACrBkC,IAAI,EAAE;YACJ;YACAC,GAAG,EAAE5B,YAAY,CAACU,QAAQ,CAACjB,IAAI,CAAC,GAC5B,mBAAmB,CAAC;YAAA,EACpB,kBAAkB;YAAE;YACxBoC,UAAU,EAAE;cAAE3C,KAAK,EAAE,EAAE;cAAEC,MAAM,EAAE;YAAG,CAAC,CAAC;UACxC;QAAE,GATGqC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAEbrC,OAAA;MAAAiC,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrB,eACDrC,OAAA;MAAAiC,QAAA,EACGe,MAAM,CAACC,OAAO,CAAC/B,YAAY,CAAC,CAACuB,GAAG,CAAC,CAAC,CAACb,QAAQ,EAAEsB,IAAI,CAAC,kBACjDlD,OAAA;QAAAiC,QAAA,GACGL,QAAQ,EAAC,GACV,eAAA5B,OAAA;UAAMmD,SAAS,EAAG,eAAcD,IAAI,GAAG,OAAO,GAAG,KAAM,EAAE;UAAAjB,QAAA,EACtDiB,IAAI,GAAG,WAAW,GAAG;QAAa;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA,GAJCT,QAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrC,OAAA;MAAAiC,QAAA,EACI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA,eACR,CAAC;AAEP;AAACxB,EAAA,CA3FuBD,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}