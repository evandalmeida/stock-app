{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/frontend/src/components/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, KmlLayer } from '@react-google-maps/api';\n\n// Import and console log KML to verify data\nimport countriesKml from './countries.kml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(countriesKml);\nconst originalCenter = {\n  lat: 32,\n  lng: 20\n};\nconst containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nfunction Map() {\n  _s();\n  const [apiKey, setApiKey] = useState('');\n  useEffect(() => {\n    fetch('/api/key').then(res => res.text()).then(setApiKey);\n  }, []);\n  const [center, setCenter] = useState(originalCenter);\n\n  // Try/catch rendering errors\n  try {\n    return /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: apiKey,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: center,\n        zoom: 2,\n        mapContainerStyle: containerStyle,\n        children: [\"// Simplify KML layer\", /*#__PURE__*/_jsxDEV(KmlLayer, {\n          data: countriesKml,\n          options: {\n            preserveViewport: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  } catch (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error loading KML: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(Map, \"A9K0lMH/gnmgJiVldqIiAM7EgC8=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","KmlLayer","countriesKml","jsxDEV","_jsxDEV","console","log","originalCenter","lat","lng","containerStyle","width","height","Map","_s","apiKey","setApiKey","fetch","then","res","text","center","setCenter","googleMapsApiKey","children","zoom","mapContainerStyle","data","options","preserveViewport","fileName","_jsxFileName","lineNumber","columnNumber","error","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/frontend/src/components/MarketWatch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, KmlLayer } from '@react-google-maps/api';\n\n// Import and console log KML to verify data\nimport countriesKml from './countries.kml';\nconsole.log(countriesKml);\n\nconst originalCenter = {\n  lat: 32, \n  lng: 20\n};\n\nconst containerStyle = {\n  width: '800px',\n  height: '400px'\n}; \n\nfunction Map() {\n\n  const [apiKey, setApiKey] = useState('');\n\n  useEffect(() => {\n    fetch('/api/key')\n      .then(res => res.text())\n      .then(setApiKey);\n  }, []);\n\n  const [center, setCenter] = useState(originalCenter);\n\n  // Try/catch rendering errors\n  try {\n    return (\n      <LoadScript \n        googleMapsApiKey={apiKey}\n      >\n        <GoogleMap\n          center={center}\n          zoom={2}\n          mapContainerStyle={containerStyle}\n        >\n          \n          // Simplify KML layer\n          <KmlLayer\n            data={countriesKml}\n            options={{\n              preserveViewport: true\n            }}\n          />\n\n        </GoogleMap>\n      </LoadScript>\n    );\n  } catch (error) {\n    return <p>Error loading KML: {error}</p>\n  }\n\n}\n\nexport default Map;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,wBAAwB;;AAExE;AACA,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3CC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;AAEzB,MAAMK,cAAc,GAAG;EACrBC,GAAG,EAAE,EAAE;EACPC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdmB,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACF,SAAS,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAACU,cAAc,CAAC;;EAEpD;EACA,IAAI;IACF,oBACEH,OAAA,CAACJ,UAAU;MACTuB,gBAAgB,EAAER,MAAO;MAAAS,QAAA,eAEzBpB,OAAA,CAACL,SAAS;QACRsB,MAAM,EAAEA,MAAO;QACfI,IAAI,EAAE,CAAE;QACRC,iBAAiB,EAAEhB,cAAe;QAAAc,QAAA,GACnC,uBAGC,eAAApB,OAAA,CAACH,QAAQ;UACP0B,IAAI,EAAEzB,YAAa;UACnB0B,OAAO,EAAE;YACPC,gBAAgB,EAAE;UACpB;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,oBAAO9B,OAAA;MAAAoB,QAAA,GAAG,qBAAmB,EAACU,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC1C;AAEF;AAACnB,EAAA,CAvCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}