{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Development/code/phase-4/stock-app/frontend/src/components/MarketWatch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nconst center = {\n  lat: 20,\n  // Center latitude for the initial view\n  lng: 0 // Center longitude for the initial view\n};\n\n// Define the locations for the markers\nconst locations = [{\n  name: 'United States',\n  lat: 37.0902,\n  lng: -95.7129\n}, {\n  name: 'Europe',\n  lat: 54.5260,\n  lng: 15.2551\n},\n// Approximate center of Europe\n{\n  name: 'Asia',\n  lat: 34.0479,\n  lng: 100.6197\n},\n// Approximate center of Asia\n{\n  name: 'Australia',\n  lat: -25.2744,\n  lng: 133.7751\n}, {\n  name: 'Canada',\n  lat: 56.1304,\n  lng: -106.3468\n}];\nfunction MapComponent() {\n  _s();\n  const [apiKey, setApiKey] = useState(\"\");\n  useEffect(() => {\n    // Fetch the Google Maps API key from the backend\n    fetch('/api/maps/config').then(response => response.json()).then(data => setApiKey(data.apiKey)).catch(error => console.error(\"Error fetching Google Maps API key:\", error));\n  }, []);\n  return apiKey ? /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: apiKey,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 2,\n      children: locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: location,\n        title: location.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"NxfgCotLcCWwWhDqFLddSEQGeuQ=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","locations","name","MapComponent","_s","apiKey","setApiKey","fetch","then","response","json","data","catch","error","console","googleMapsApiKey","children","mapContainerStyle","zoom","map","location","index","position","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evan/Development/code/phase-4/stock-app/frontend/src/components/MarketWatch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '800px',\n  height: '400px'\n};\n\nconst center = {\n  lat: 20, // Center latitude for the initial view\n  lng: 0 // Center longitude for the initial view\n};\n\n// Define the locations for the markers\nconst locations = [\n  { name: 'United States', lat: 37.0902, lng: -95.7129 },\n  { name: 'Europe', lat: 54.5260, lng: 15.2551 }, // Approximate center of Europe\n  { name: 'Asia', lat: 34.0479, lng: 100.6197 }, // Approximate center of Asia\n  { name: 'Australia', lat: -25.2744, lng: 133.7751 },\n  { name: 'Canada', lat: 56.1304, lng: -106.3468 }\n];\n\nfunction MapComponent() {\n  const [apiKey, setApiKey] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch the Google Maps API key from the backend\n    fetch('/api/maps/config')\n      .then(response => response.json())\n      .then(data => setApiKey(data.apiKey))\n      .catch(error => console.error(\"Error fetching Google Maps API key:\", error));\n  }, []);\n\n  return apiKey ? (\n    <LoadScript googleMapsApiKey={apiKey}>\n      <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={2}>\n        {/* Render markers for each location */}\n        {locations.map((location, index) => (\n          <Marker key={index} position={location} title={location.name} />\n        ))}\n      </GoogleMap>\n    </LoadScript>\n  ) : (\n    <p>Loading map...</p>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,EAAE;EAAE;EACTC,GAAG,EAAE,CAAC,CAAC;AACT,CAAC;;AAED;AACA,MAAMC,SAAS,GAAG,CAChB;EAAEC,IAAI,EAAE,eAAe;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE,CAAC;AAAQ,CAAC,EACtD;EAAEE,IAAI,EAAE,QAAQ;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAC;AAAE;AAChD;EAAEE,IAAI,EAAE,MAAM;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAS,CAAC;AAAE;AAC/C;EAAEE,IAAI,EAAE,WAAW;EAAEH,GAAG,EAAE,CAAC,OAAO;EAAEC,GAAG,EAAE;AAAS,CAAC,EACnD;EAAEE,IAAI,EAAE,QAAQ;EAAEH,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE,CAAC;AAAS,CAAC,CACjD;AAED,SAASG,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACAmB,KAAK,CAAC,kBAAkB,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAACN,MAAM,CAAC,CAAC,CACpCO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC,CAAC;EAChF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOR,MAAM,gBACXX,OAAA,CAACH,UAAU;IAACwB,gBAAgB,EAAEV,MAAO;IAAAW,QAAA,eACnCtB,OAAA,CAACJ,SAAS;MAAC2B,iBAAiB,EAAEtB,cAAe;MAACG,MAAM,EAAEA,MAAO;MAACoB,IAAI,EAAE,CAAE;MAAAF,QAAA,EAEnEf,SAAS,CAACkB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B3B,OAAA,CAACF,MAAM;QAAa8B,QAAQ,EAAEF,QAAS;QAACG,KAAK,EAAEH,QAAQ,CAAClB;MAAK,GAAhDmB,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC,gBAEbjC,OAAA;IAAAsB,QAAA,EAAG;EAAc;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CACrB;AACH;AAACvB,EAAA,CAvBQD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAyBrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}